name: tests

on:
  pull_request:
  push:
    branches: [develop, master]
    paths:
      - "**.lock"
      - "**.py"
      - "**.toml"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Set up Poetry cache for Python dependencies
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install Poetry
        run: |
          curl -fsS -o get-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
          python get-poetry.py -y
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Run unit tests
        run: pytest --cov-report=xml
      - name: Upload test coverage report to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          flags: unittests
